高阶函数定义：
接受一个或多个函数作为输入
return 返回另外一个函数

递归函数定义：在函数内部，可以调用其他函数。如果一个函数在内部调用自已本身，这个函数就叫做递归函数。
递归函数的特性：
1、必须有一个明确的结束条件
2、每次进入更深一层递归时，问题规模相比上次递归都应有所减少
3、递归效率不高，递归层次过多会导致栈溢出
（在计算机中，函数调用是通过栈（stack）这种数据结构实现的，每当进入一个函数调用，
栈就会加一层栈帧，每当函数返回，栈就会减一层栈帧。
由于栈的大小不是无限的，所以，递归调用的次数过多，会导致栈溢出

闭包的意义：返回的函数对象，不仅仅是一个函数对象
在该函数外还包裹了一层作用域，这使得，该函数无论在何处调用
优先使用自己外层包裹的作用域

生成器和迭代器的区别？
生成器约等于迭代器，两者并没有什么区别，生成器能做到迭代器能做的所有事
而且因为自动创建了 iter()和 next()方法,生成器显得特别简洁,而且
生成器也是高效的，使用生成器表达式取代列表解析可以同时节省内存。
除了创建和保存程序状态的自动方法,当
发生器终结时,还会自动抛出 StopIteration 异常。

生成器有几种方式获取value？
生成器有3种方式获取value
next（x）
x.__next__()
for i in x:

lambda 函数
下面的场景是比较适合使用 lambda 表达式的：
你所要做的操作是不重要的，函数不值得一个名称。
使用 lambda 表达式比你所能想到的函数名称让代码更容易理解。
你很确定还没有一个函数能满足你的需求。
你团队的每个人都了解 lambda 表达式, 并且都同意使用它们。